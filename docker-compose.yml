services:
  minio:
    image: minio/minio:latest
    container_name: minio-server
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./docker_volumes/minio/data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      
  minio-init:
    image: alpine:latest
    depends_on:
      - minio
    volumes:
      - ./docker_volumes/minio/init.sh:/init.sh
    entrypoint: /bin/sh
    command: -c "apk add --no-cache curl && wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc && chmod +x /usr/bin/mc && chmod +x /init.sh && /init.sh"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    networks:
      - mlops-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.1.4
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./docker_volumes/mlflow/data:/mlflow
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command: /bin/sh -c "pip install boto3 && mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root s3://mlflow/"
    depends_on:
      - minio
    networks:
      - mlops-network

  api:
    build: .
    container_name: mlops-api
    ports:
      - "8042:8042"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./docker_volumes/app/logs:/app/logs
      - ./docker_volumes/app/models:/app/models
      - ./docker_volumes/app/data:/app/data
    depends_on:
      - mlflow
      - minio
    networks:
      - mlops-network

networks:
  mlops-network:
    driver: bridge
